<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://biabl.github.io</link>
    <atom:link href="http://biabl.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <description></description>
    <language>en-us</language>
    <pubDate>Thu, 10 Dec 2015 13:15:46 +0000</pubDate>
    <lastBuildDate>Thu, 10 Dec 2015 13:15:46 +0000</lastBuildDate>

    
    
    <item>
      <title>buildtemplateparallel.sh Bug</title>
      <link>http://biabl.github.io/2015/12/08/buildtemplateparallel.sh-bug/</link>
      <pubDate>Tue, 08 Dec 2015 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://biabl.github.io/2015/12/08/buildtemplateparallel.sh-bug</guid>
      <description>&lt;p&gt;When trying to run buildtemplateparallel.sh, I ran into several problems. Here are a list of changes I had to make. Here’s my code to run buildtemplateparallel.sh:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /fslhome/intj5/compute/templates/SOBIK/data
~/apps/ants-20151207/bin/buildtemplateparallel.sh &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
-d &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
-o sobik &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
-c &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
*.nii.gz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;problem-1&quot;&gt;Problem 1&lt;/h2&gt;

&lt;p&gt;There was not a &lt;em&gt;qscript&lt;/em&gt; variable after the &lt;code&gt;elif&lt;/code&gt; command on line 1237.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$DOQSUB&lt;/span&gt; -eq &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;qscript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;job_${count}_${i}.sh&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;#!/bin/sh&amp;quot;&lt;/span&gt; &amp;gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;qscript&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;problem-2&quot;&gt;Problem 2&lt;/h2&gt;

&lt;p&gt;Next issue was the lack of specifying the amount of memory required for the sbatch submission. The FSL supercomputer requires memory listed, &lt;code&gt;--mem-per-cpu=32768M&lt;/code&gt;. Here’s how I fixed the code on line 1242 (previously 1241 before fixing Problem #1).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;sbatch --job-name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;antsdef&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; --export&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1,LD_LIBRARY_PATH&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LD_LIBRARY_PATH&lt;/span&gt;,ANTSPATH&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ANTSPATH&lt;/span&gt; --nodes&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; --cpus-per-task&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; --mem-per-cpu&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;32768M --time&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;50:00:00 &lt;span class=&quot;nv&quot;&gt;$QSUBOPTS&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$qscript&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; rev &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; cut -f1 -d&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; rev&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;problem-3&quot;&gt;Problem 3&lt;/h2&gt;

&lt;p&gt;The latest version of &lt;code&gt;N4BiasFieldCorrection&lt;/code&gt; was giving errors and aborting script. I was able to copy the script from the pre-complied code:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;cp -v &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
~/apps/ants-2.1.0-redhat/N4BiasFieldCorrection &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
~/apps/ants-20151207/bin/N4BiasFieldCorrection&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here’s the end result of using the 20 SOBIK participants. Goosebumps!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/buildtemplateparallel.sh-bug/sobiktemplate.jpg&quot; alt=&quot;SOBIK Template&quot; /&gt;&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>ANTs Installation Bug</title>
      <link>http://biabl.github.io/2015/12/07/ants-installation-bug/</link>
      <pubDate>Mon, 07 Dec 2015 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://biabl.github.io/2015/12/07/ants-installation-bug</guid>
      <description>&lt;p&gt;There’s a bug with how GCC is installed on the supercomputer, which prevents installation of ANTs. Luckily there’s a solution.&lt;/p&gt;

&lt;p&gt;Make sure you start with a completely fresh install. Remove the &lt;code&gt;ANTs&lt;/code&gt; and &lt;code&gt;antsbin&lt;/code&gt; directories:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/apps/
rm -rf ANTs
rm -rf antsbin&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Follow the directions provided by ANTs:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/apps/
git clone git://github.com/stnava/ANTs.git
mkdir ants-20151207
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ants-20151207
ccmake ../ANTs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In CMAKE, type “c” to load the configuration information and then type “t” to toggle to advanced mode. You want to edit the option, “CMAKE_EXE_LINKER_FLAGS” which by default is blank, but needs to be &lt;code&gt;-fuse-ld=bfd&lt;/code&gt; instead. Press “ENTER” to edit the option.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/2015-12-07-ants-installation-bug/screenshot-image1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Type “c” and then “g” and then exit back to the terminal by typing “q”.&lt;/p&gt;

&lt;p&gt;Compile your code:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;make -j 4&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and wait awhile.&lt;/p&gt;

&lt;p&gt;Once ANTs is installed, remember to copy the scripts to your ANTs bin directory and set your environmental variables:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;cp -v ~/apps/ANTs/Scripts/* ~/apps/ants-20151207/bin/
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;export ANTSPATH=/fslhome/&amp;lt;USERNAME&amp;gt;/antsbin-20151207/bin/&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bash_profile
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;export PATH=${ANTSPATH}:${PATH}&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bash_profile&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Average Cortical Thickness Consideration</title>
      <link>http://biabl.github.io/2015/12/06/average-cortical-thickness/</link>
      <pubDate>Sun, 06 Dec 2015 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://biabl.github.io/2015/12/06/average-cortical-thickness</guid>
      <description>&lt;p&gt;If you were to just take the average of all the voxels in the cortical thickness image, you would be including a lot of extra non-cortical voxels that will GREATLY skew your data!&lt;/p&gt;

&lt;p&gt;In order to deal with this issue, if you use the gray matter segmentation as a mask, then when you acquire the average thickness, it will be for the cortical regions only. Remember the the human cortex ranges from about 1 to 4mm in thickness with an average around 2.5 to 3mm.&lt;/p&gt;

&lt;h2 id=&quot;generate-data&quot;&gt;Generate Data&lt;/h2&gt;

&lt;p&gt;In order to extract the average cortical thickness in a single participant:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /path/to/antsCorticalThickness/directory/
~/apps/c3d/bin/c3d BrainSegmentation.nii.gz -threshold &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; -as MASK CorticalThickness.nii.gz -push MASK -lstat&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Let’s compare the output if we didn’t run this code, but ran the code to just get the average intensity of ALL the voxels:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~/apps/c3d/bin/c3d CorticalThickness.nii.gz -info-full
Image &lt;span class=&quot;c&quot;&gt;#1:&lt;/span&gt;
  Image Dimensions   : &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;198, 236, 200&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  Bounding Box       : &lt;span class=&quot;o&quot;&gt;{[&lt;/span&gt;100.999 96.2826 -87.5596&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;298.933 332.089 112.618&lt;span class=&quot;o&quot;&gt;]}&lt;/span&gt;
  Voxel Spacing      : &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0.999667, 0.99918, 1.00089&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  Intensity Range    : &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0, 10.4775&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  Mean Intensity     : 0.271343&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Obvious a cortical thickness of 0.271343 is not valid. With the correct code you can see that the average thickness is actually 4.09824 \( \pm \) 1.42453.&lt;/p&gt;

&lt;p&gt;If you want to try and run this specifically with our course dataset:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; subj in &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;ls ~/compute/data/&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; 
&lt;span class=&quot;nv&quot;&gt;subjDir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/compute/data/&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;subj&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$subj&lt;/span&gt; &amp;gt;&amp;gt; ~/compute/projects/corticalthickness/data.csv 
~/apps/c3d/bin/c3d &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;subjDir&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/antsCorticalThickness/BrainSegmentation.nii.gz &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
-threshold &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
-as MASK &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;subjDir&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/antsCorticalThickness/CorticalThickness.nii.gz &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
-push MASK &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
-label-statistics &amp;gt;&amp;gt; ~/compute/projects/corticalthickness/data.csv
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;regular-expressions&quot;&gt;Regular Expressions&lt;/h2&gt;

&lt;p&gt;The file is not perfectly formatted so that it can be easily imported into R or even useful in Excel. Some editing of the file needs to happen and we can use the power of Regular Expressions in Terminal to edit the file. Just make sure to change the username in the first line of the code.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/fslhome/username/compute/projects/corticalthickness/data.csv&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;${input%.*}_modified.csv&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;dirname &lt;span class=&quot;nv&quot;&gt;$input&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
grep -vwE &lt;span class=&quot;s2&quot;&gt;&amp;quot;(Reading #1|LabelID|^(    0))&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sed -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;s|/|,|&amp;quot;&lt;/span&gt; -Ee &lt;span class=&quot;s2&quot;&gt;&amp;quot;s/[ ]+/,/g&amp;quot;&lt;/span&gt; &amp;gt; temp.txt
awk &lt;span class=&quot;s1&quot;&gt;&amp;#39;/^[0-9][0-9][0-9][0-9]_[0-9][0-9][0-9][0-9][0-9][0-9]/{for(i=0;i&amp;lt;1;i++)print}&amp;#39;&lt;/span&gt; temp.txt &amp;gt; part1.txt
awk &lt;span class=&quot;s1&quot;&gt;&amp;#39;/^,/{print}&amp;#39;&lt;/span&gt; temp.txt &amp;gt; part2.txt
sed -i &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;s|,1,|,corticalthickness,|&amp;quot;&lt;/span&gt; part2.txt 
paste part1.txt part2.txt &amp;gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
perl -pi -e &lt;span class=&quot;s1&quot;&gt;&amp;#39;print &amp;quot;subjectid, label, mean, std, max, min, count, volume (mm^3), extent x, extent y, extent z\n&amp;quot; if($.==1)&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
rm part1.txt
rm part2.txt
rm temp.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note this code works for the SOBIK dataset. If you have different subject IDs, you’ll need to edit the regular expression in line #5. If you need more help figuring out regular expressions visit this website here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://regex101.com/&quot;&gt;https://regex101.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Oh noes, acpcdetect Failed!</title>
      <link>http://biabl.github.io/2015/12/05/oh-no-acpcdetect-failed/</link>
      <pubDate>Sat, 05 Dec 2015 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://biabl.github.io/2015/12/05/oh-no-acpcdetect-failed</guid>
      <description>&lt;p&gt;Occasionally, &lt;em&gt;acpcdetect&lt;/em&gt; might not accurately find and adjust the images along the anterior and posterior commissure.  This can happen if there’s a lot of damage in the brain and the ventricles are enlarged. There are several things you can do to help &lt;em&gt;acpcdetect&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;adjust-search-radius&quot;&gt;Adjust Search Radius&lt;/h2&gt;

&lt;p&gt;By default the search radius for the VSPS is 50 mm. You can change this by adding the option &lt;code&gt;-rvsps &amp;lt;r&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The default search radii for the anterior and posterior commissure are 15 mm. You can change each of these by adding the options &lt;code&gt;-rac &amp;lt;r&amp;gt;&lt;/code&gt; and &lt;code&gt;-rpc &amp;lt;r&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Adjusting the search radius does not always work though.&lt;/p&gt;

&lt;h2 id=&quot;specify-the-precise-location&quot;&gt;Specify the Precise Location&lt;/h2&gt;

&lt;p&gt;You can also just tell the program where VSPS, AC, and PC are exactly located. To tell &lt;em&gt;acpcdetect&lt;/em&gt; where the VSPS is located, add the following option: &lt;code&gt;-VSPS &amp;lt;x&amp;gt; &amp;lt;y&amp;gt; &amp;lt;z&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;The best program to use is ITK-Snap to determine coordinates.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/oh-no-acpcdetect-failed/VSPS.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To specify the location of the anterior commissure: &lt;code&gt;-AC &amp;lt;x&amp;gt; &amp;lt;y&amp;gt; &amp;lt;z&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/oh-no-acpcdetect-failed/AC.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To specify the location of the posterior commissure: &lt;code&gt;-PC &amp;lt;x&amp;gt; &amp;lt;y&amp;gt; &amp;lt;z&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/oh-no-acpcdetect-failed/PC.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With these methods, you will be able to fix any problems with &lt;em&gt;acpcdetect&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    

  </channel> 
</rss>